apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: hornet
spec:
  # replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: hornet
  template:
    metadata:
      labels:
        app: hornet
    spec:
      containers:
      - image: gohornet/hornet:latest
        name: hornet
        args: ["--config", "/config/config.json", "--peering", "/config/peering.json", "--profiles", "/config/profiles.json"]
        resources:
          requests:
            memory: "100Mi"
            cpu: "250m"
          #limits:
          #  memory: "8000Mi"
          #  cpu: "4000m"
        readinessProbe:
          httpGet:
            path: /health
            port: 14265
        ports:
        - name: gossip
          protocol: TCP
          containerPort: 15600
        - name: autopeering
          protocol: UDP
          containerPort: 14626
        - name: rest
          protocol: TCP
          containerPort: 14265
        - name: dashboard
          protocol: TCP
          containerPort: 8081
        - name: mqtt
          protocol: TCP
          containerPort: 1883
        volumeMounts:
        - mountPath: /config
          name: configuration
        - mountPath: /app/mainnetdb
          name: mainnetdb
        - mountPath: /app/snapshots/mainnet
          name: snapshots
      volumes:
      - name: mainnetdb
        persistentVolumeClaim:
          claimName: hornet-mainnetdb-pvc
      - name: snapshots
        persistentVolumeClaim:
          claimName: hornet-snapshot-pvc
      - name: configuration
        configMap:
          name: hornet-config
          items:
          - key: config.json
            path: config.json
          - key: profiles.json
            path: profiles.json
          - key: peering.json
            path: peering.json



            